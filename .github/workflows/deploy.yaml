name: CI-CD

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: toyou-bucket
  CODE_DEPLOY_APPLICATION_NAME: toyou-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: toyou-front

jobs:
  build:
    runs-on: ubuntu-20.04

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up  node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # - name: Docker Hub 로그인
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

      # - name: Docker build
      #   run: docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/shopping-image -f ./shopping/DockerFile .

      # - name: Docker push
      #   run: docker push ${{ secrets.DOCKER_USERNAME }}/shopping-image

      # # - name: Set up Docker Buildx
      # #   uses: docker/setup-buildx-action@v1 # buildx 설정

      # # - name: Build and push
      # #   uses: docker/build-push-action@v2
      # #   with:
      # #     context: .
      # #     platforms: linux/amd64
      # #     push: true
      # #     tags: ${{ secrets.DOCKER_USERNAME }}/shopping-image
      # #     cache-from: type=gha # gha : Guthub Actions 용 캐시
      # #     cache-to: type=gha,mode=max

      # - name: Make zip file
      #   run: zip -r ./$GITHUB_SHA.zip .
      #   shell: bash

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-2

      # - name: Upload to S3
      #   run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      # - name: Code Deploy
      #   run: |
      #     aws deploy create-deployment \
      #     --deployment-config-name CodeDeployDefault.AllAtOnce \
      #     --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
      #     --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
      #     --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip

      # Docker run
      - name: SSH EC2 connect & docker run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_PUBLIC_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          debug: true
          script: |
            sudo docker rm -f shopping-container # 컨테이너 삭제
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/shopiing-image # 이미지 삭제
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/shopping-image
            sudo docker run -d -p 3307:3000 --name shopping-container ${{ secrets.DOCKER_USERNAME }}/shopping-image
